import java_cup.runtime.*;
import java.util.function.Consumer;

action code
{:
    public static void bucleFor (Integer num, String param, Consumer<String> func){ 
		for (int i = 0; i < num; i++) {
            func.accept(param);
		};
	};

    public static void ponerEnTablero(String color){
        Tablero.poner(color);
    };

    public static void sacarDelTablero(String color){
        Tablero.sacar(color);
    };

    public static void moverPuntero(String direccion){
        Tablero.mover(direccion);
    };
:}


terminal PONER, MOVER, SACAR, START, END, LPAREN, RPAREN, COMMA, SCOLON, LBRACE, RBRACE, TABLERO, REPEAT;
terminal String DIR, COLOR;
terminal Integer NUMBER;
non terminal program, initial, listaDeclaraciones, declaracion, instruccion, loop;
non terminal Tablero tablero;
non terminal String mover, poner, sacar;

program ::= initial START listaDeclaraciones END
    {:
        Tablero.imprimirTablero();
        System.out.println("[Sintaxis completada satisfactoriamente]"); 
    :};

initial ::= tablero 
    {:
        Tablero.imprimirTablero();
    :};

tablero ::= TABLERO LPAREN NUMBER:n1 COMMA NUMBER:n2 RPAREN SCOLON
    {:
        RESULT = new Tablero(n1, n2);
    :};

listaDeclaraciones ::= listaDeclaraciones declaracion 
                    | declaracion;

declaracion ::= instruccion | loop;

instruccion ::= poner:c
    {:
        ponerEnTablero(c);
        Tablero.imprimirTablero();
    :};

instruccion ::= mover:d
    {:
        moverPuntero(d);
        Tablero.imprimirTablero();
    :};

instruccion ::= sacar:c
    {:
        sacarDelTablero(c);
        Tablero.imprimirTablero();
    :};

loop ::= REPEAT LPAREN NUMBER:n RPAREN LBRACE poner:c RBRACE SCOLON
    {:
        Consumer<String> ponerFuncion = color -> ponerEnTablero(color);
        bucleFor(n, c, ponerFuncion);
    :};

loop ::= REPEAT LPAREN NUMBER:n RPAREN LBRACE mover:d RBRACE SCOLON
    {:  
        Consumer<String> moverFuncion = direccion -> moverPuntero(direccion);
        bucleFor(n, d, moverFuncion);
    :};

loop ::= REPEAT LPAREN NUMBER:n RPAREN LBRACE sacar:c RBRACE SCOLON
    {:  
        Consumer<String> sacarFuncion = color -> sacarDelTablero(color);
        bucleFor(n, c, sacarFuncion);        
    :};

mover ::= MOVER LPAREN DIR:d RPAREN SCOLON
    {:
        RESULT = String.valueOf(d.charAt(0));
    :};

poner ::= PONER LPAREN COLOR:c RPAREN SCOLON
    {:
        RESULT = String.valueOf(c.charAt(0));
    :};

sacar ::= SACAR LPAREN COLOR:c RPAREN SCOLON
    {:
        RESULT = String.valueOf(c.charAt(0));
    :};